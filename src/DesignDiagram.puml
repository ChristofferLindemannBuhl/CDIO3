@startuml

class Dicegame {
  static final int NO_OF_PLAYERS = 4
  static final int NO_OF_FIELDS = 24
  static final int BOARD_WIDTH = 6
  static final int MONEY_FOR_PASSING_START = 200
  static final int START_MONEY = 1500
  static final int TURNS_IN_JAIL = 3
}

class Player {
  -int playerID
  -String name
  -Dice[] dice
  -Wallet wallet
  -int position
  -int turnsLeftInJail
  -boolean hasGetOutOfJailFreeCard
  +Player(String name, int playerID)
  +void rollDice()
  +int getDieValue(int die)
  +int getSumOfDice()
  +int getID()
  +String getName()
  +String getStats()
  +Wallet wallet()
  +int getPosition()
  +void setPosition(int newPlayerPosition)
  +void move(int amountToMove)
  -void processPlayerMovement(int newPlayerPosition)
  -void validateIfPassedStart(int oldPlayerPosition, int newPlayerPosition)
  +boolean isInJail()
  +void goToJail()
  +int getTurnsLeftInJail()
}

class Wallet {
  -int money
  +Wallet()
  +int getMoney()
  +void addMoney(int moneyToAdd)
  +void subtractMoney(int moneyToSubtract)
}

class Field {
  -int space
  +Field(int space)
  +int getSpace()
  +void landingLogic(Player currentPlayer)
}

class StartField {
  +StartField(int space)
}

class BuyableField {
  -String name
  -int price
  -int rent
  -int owner
  +BuyableField(int space, String name, int price, int rent, int owner)
  +void landingLogic(Player currentPlayer)
}

class ChanceField {
  +ChanceField(int space)
  +void landingLogic(Player currentPlayer)
}

class JailField {
  +JailField(int space)
  +void landingLogic(Player currentPlayer)
}

class ParkingField {
  +ParkingField(int space)
  +void landingLogic(Player currentPlayer)
}

class GoToJailField {
  +GoToJailField(int space)
  +void landingLogic(Player currentPlayer)
}

class GameBoard {
  -char[][] board
  -List<Field> fieldList
  +GameBoard()
  +void initializeBoard()
  +String toString()
  +void updatePlayerPositions()
  +void runFieldLogic(Player currentPlayer)
  {private} +char getPlayerSymbol(int playerIndex)
}

Dicegame --|> Player
Player --|> Wallet
Field <|-- StartField
Field <|-- BuyableField
Field <|-- ChanceField
Field <|-- JailField
Field <|-- ParkingField
Field <|-- GoToJailField
Dicegame --> GameBoard
GameBoard -- Field

@enduml
